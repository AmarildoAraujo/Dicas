********************************************************************************************
sudo cron status
sudo service cron start/stop/restart
crontab -l  = lista de tarefas
crontab -e  = Edita lista de tarefas
   |minutos|horas|dia mês|mês |dias semana| comando
   | 0-59  | 0-23|  1-31 |1-12|     0-7   |
   |   *   |  *  |   *   |  * |     *     |
   |  */5  |  *  |   *   |  * |     *     | a cada 5 minutos executa 
   |5,20,30| */2 |   *   |  * |     *     | a cada 2 horas, minutos 2,20 e 30 executa
   |   0   | 9-17|   *   |  * |     1     | toda segunda-feira, das 9h às 17h, no minuto 0
salva o arquivo
********************************************************************************************
nano /etc/systemd/system/meuService.service
   [Unit]

    Description=your description
    [Service]

    ExecStart=/path/to/command/or/script
    [Install]
    WantedBy=multi-user.target
systemctl enable meuService.service
ou
crontab -e
@reboot /caminho/para/comando/ou/script
**************************************************************************
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
**************************************************************************
apt install samba -y &&
systemctl start smbd &&
useradd userTeste
smbpasswd -a userTeste
  /etc/samba/smb.conf
    [nomeDir]
     path=/home/user/nomeDir
     valid users = userTeste,userTeste1
     read list = userTeste1
     write list = userTeste
     browseable = yes
testparm
systemctl restart smbd

**************************************************************************
adduser userTeste
passwd userTeste
deluser userTeste
/etc/sudoers
   userTeste  ALL=(ALL:ALL) ALL  
or
sudo usermod -aG sudo userTeste
**************************************************************************
sudo apt-get install network-manager-l2tp network-manager-l2tp-gnome -y
**************************************************************************
Montar Partição HD
lista HD
sudo blkid
#Inseri UUID na ultima Linha
sudo nano /etc/fstab

**************************************************************************
1.Instalar VNC Linux Mint
     sudo apt-get -y remove vino
2. Instalar x11vnc:
     sudo apt-get -y install x11vnc
3. Cria diretorio para Senha do Servidor:
     sudo mkdir /etc/x11vnc
4. Criar a senha criptografada:
     sudo x11vnc --storepasswd /etc/x11vnc/vncpwd
     Você será solicitado a inserir e verificar a senha. Em seguida, pressione Y para salvar o arquivo de senha.
5. Criar o arquivo de serviço systemd para o serviço x11vnc:
     sudo xed /lib/systemd/system/x11vnc.service
Copie/cole este código no arquivo vazio:

[Unit]
Description=Start x11vnc at startup.
After=multi-user.target

[Service]
Type=simple
ExecStart=/usr/bin/x11vnc -auth guess -forever -noxdamage -repeat -rfbauth /etc/x11vnc/vncpwd -rfbport 5900 -shared

[Install]
WantedBy=multi-user.target

6: Recarregue os serviços:
     sudo systemctl daemon-reload
7. Ative o serviço x11vnc no momento da inicialização:
     sudo systemctl enable x11vnc.service
8. Inicie o serviço:
     Either reboot or
     sudo systemctl start x11vnc.service
**************************************************************************
# Install nvm - Gerenciador de versões Node
     curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.36.0/install.sh | bash
nvm install NVersãoNode
nvm list
nvm use NVersãoNode
**************************************************************************
# Install insomnia
echo "deb https://dl.bintray.com/getinsomnia/Insomnia /" \
    | sudo tee -a /etc/apt/sources.list.d/insomnia.list

# Add public key used to verify code signature
wget --quiet -O - https://insomnia.rest/keys/debian-public.key.asc \
    | sudo apt-key add -

# Refresh repository sources and install Insomnia
sudo apt-get update
sudo apt-get install insomnia
**************************************************************************
# Install mongoDb
wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add -
sudo apt-get install gnupg
echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list
sudo apdate
sudo apt-get install -y mongodb-org
Desinstalar - 
    sudo apt-get purge mongodb-org*
    sudo rm -r /var/log/mongodb
    sudo rm -r /var/lib/mongodb
-------------------------
sudo systemctl start/stop/restart mongod
-------------------------
use dbName        Cria ou seleciona
  db.createUser({
    user: "araujo",
    pwd: "123456789",
    roles: ["readWrite"]
  })

**************************************************************************
# Install redis Mint 19
wget http://download.redis.io/redis-stable.tar.gz
tar xvzf redis-stable.tar.gz
cd redis-stable
make

# Install redis Mint 20
sudo apt update && sudo apt upgrade -y
sudo apt install redis-server -y

redis-server      Startar server

redis-cli
redis 127.0.0.1:6379> 
comando: ping <> PONG
set mykey somevalue <> OK
get mykey <> "somevalue"
get key *

redis-cli shutdown

**************************************************************************
# Install LAMP
sudo apt update && sudo apt install apache2 && sudo ufw app info "Apache Full" && sudo ufw allow in "Apache Full" && sudo systemctl restart apache2
       /etc/apache2/apache2.conf
       /etc/apache2/sites-available/000-default.conf
         chown -R user dominio/
         chgrp -R www-data dominio/
         chmod -R 750 dominio/
         chmod g+s dominio/
         ls -l
       sudo systemctl start/stop/restart apache2
----------
sudo apt install mysql-server
sudo mysql_secure_installation
ou
sudo apt install mariadb-server -y
sudo systemctl status mariadb
sudo mysql –v
sudo mysql_secure_installation
//////////////////////////
/etc/init.d/mysql stop
/etc/init.d/mysql start
//////////////////////////
CREATE DATABASE databaseName;
USE databaseName;
SHOW TABLES;

CREATE USER 'araujo'@'%' IDENTIFIED BY '123456';
SET PASSWORD FOR 'araujo'@'%' = PASSWORD('123456');
GRANT ALL PRIVILEGES ON * . * TO 'araujo'@'%';
FLUSH PRIVILEGES;

//////////////////////////
sudo mysql -u root -p123456789
sudo systemctl start mysql
----------
************************************
sudo systemctl stop mariadb
sudo mysqld_safe --skip-grant-tables --skip-networking &
mysql -u root

ALTER USER 'root'@'localhost' IDENTIFIED BY 'nova-senha';
DROP USER 'root'@'localhost'
CREATE USER 'root'@'%' IDENTIFIED BY '';
GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;
FLUSH PRIVILEGES;
sudo systemctl start mariadb
************************************
sudo apt install php libapache2-mod-php php-mysql
sudo nano /var/www/html/info.php

sudo nano /etc/apache2/mods-enabled/dir.conf

**************************************************************************
# Install SSH
sudo apt update
sudo apt install -y openssh-server
sudo ufw allow ssh 
sudo ufw enable
sudo ufw reload
**************************************************************************
#
  apt install mosquitto
  apt install mosquitto-clients
  mosquitto_passwd -c /etc/mosquitto/passwd user
  /etc/mosquitto/conf.d/default.conf
     allow_anonymous false
     password_file /etc/mosquitto/passwd
  service mosquitto restart
**************************************************************************
sudo apt-get install ufw                                                 *
*  Ativar/Desativar: sudo ufw enable/disable                                *
*  ------Definir regras de firewall---                                      *
*  ufw allow/deny 20/tcp                                               *
*  ufw allow/deny 20:30/tcp                                            *
*  ufw allow http                                                      *
*  ufw deny from [ENDEREÇOIP]                                          *
*  ufw allow from [ENDEREÇOIP] to any port [PORTA]                     *
*  ufw status numbered                                                 *
*  ufw delete [numbered]                                               *
*  ufw app list                                                        *
*  ufw status                                                          *

**************************************************************************
* wget -r -erobots=off www.nomedosite.com.br                             *
**************************************************************************
*Windows
*    bcdedit -set testsigning off
*    (Windows) HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\PolicyAgent
*     XP   HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\IPSec
*   No menu Editar , aponte para Novo e selecione Valor DWORD (32 bits).
*   Digite AssumeUDPEncapsulationContextOnSendRule e pressione ENTER
*    0- É o valor padrão. Quando definido como 0, o Windows não pode estabelecer associações 
*        de segurança com servidores localizados atrás de dispositivos NAT.
*    1- Quando definido como 1, o Windows pode estabelecer associações de segurança com servidores 
*        localizados atrás de dispositivos NAT.
*    2- Quando definido como 2, o Windows pode estabelecer associações de segurança quando o servidor 
*        e o computador cliente VPN (baseados no Windows Vista ou no Windows Server 2008) estão atrás de dispositivos NAT. 
*
**************************************************************************
**************************************************************************
